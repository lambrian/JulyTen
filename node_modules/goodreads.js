var Loggr = require('loggr');
var request = require('request');
var CronJob = require('cron').CronJob;

var userID = "2520705";
var alternateID = "33977860";
var categoryID = "PagesRead3251990";

exports.start = function(loggr) {
    sync(loggr);
    startCronJob(loggr);
};

var sync = function(loggr) {
    // set date of latest status update that was not in the database
    // get oldest date of book entry in loggr
    // pull and loop goodreads data until at least as most as old as date

    /*
       var oldestEntry = loggr.entries.query({category: categoryID}).sort(function(entryA, entryB) {
       if (entryA.get('date') < entryB.get('date')) return -1;
       if (entryA.get('date') > entryB.get('date')) return 1;
       return 0;
       })[0];
       console.log(oldestEntry.get('date'));
       */


};

var startCronJob = function() {
    var googleAPI = "https://ajax.googleapis.com/ajax/services/feed/load?v=2.0&q=";
    var latestDate = new Date();
    var currentTotal = 0;
    var url = "https://www.goodreads.com/user_status/list/33977860-brian?format=rss";
    var count = 0;
    new CronJob('* * * * * *', function() {
        request(
            (googleAPI + encodeURIComponent(url + "&attempt=" + count) + "&num=300"),
            function(error, response, body) {
                count++;
                data = JSON.parse(body);
                if (data.responseData) console.log(data.responseData.feed.entries.length);
                else console.log(data);
                var entries = data.responseData.feed.entries;

                var newTotal = entries.reduce(function(p, entry) {
                    console.log(entry.title);
                    if (new Date(entry.publishedDate) > latestDate) {
                        //var currentPage = parseInt(entry.title.match(/Brian is on page (\d+) of (\d+)/)[1]);
                        //return (isNaN(currentPage)) ? 0 : currentPage;
                    }
                    return 0;
                }, 0);
            });
        // pull statuses until reach the latest status update
        // push to server and push to in memory array
    }, null, true, null);
};


